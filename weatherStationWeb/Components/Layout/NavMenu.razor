@using weatherStationWeb.Services
@using weatherStationWeb.Components.Pages
@inject InfluxQueryService InfluxQueryService

@code {
    private List<string>? sensorList;

    @* private List<SensorPage> sensorPages = new(); *@
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        @* foreach (var sensor in sensorList)
        {
            sensorPages.Add(SensorPage(sensorName = sensor));
        } *@
    }

    private async Task LoadData()
    {
        sensorList = await InfluxQueryService.QuerySensors();
        StateHasChanged();
    }
}

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Weather Stations</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (sensorList != null)
        {
            @foreach (var sensor in sensorList!)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@($"/{sensor}") Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> @sensor
                    </NavLink>
                </div>
            }
        }


    </nav>
</div>
